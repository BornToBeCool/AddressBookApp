{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from \"vuex\";\nconst store = createStore({\n  state() {\n    return {\n      // users: [\n      //   {\n      //     first_name: \"David\",\n      //     last_name: \"Platt\",\n      //     phone: \"01913478234\",\n      //     email: \"david.platt@corrie.co.uk\",\n      //   },\n      //   {\n      //     first_name: \"Jason\",\n      //     last_name: \"Grimshaw\",\n      //     phone: \"01913478123\",\n      //     email: \"jason.grimshaw@corrie.co.uk\",\n      //   },\n      //   {\n      //     first_name: \"Ken\",\n      //     last_name: \"Barlow\",\n      //     phone: \"019134784929\",\n      //     email: \"ken.barlow@corrie.co.uk\",\n      //   },\n      //   {\n      //     first_name: \"Rita\",\n      //     last_name: \"Sullivan\",\n      //     phone: \"01913478555\",\n      //     email: \"rita.sullivan@corrie.co.uk\",\n      //   },\n      //   {\n      //     first_name: \"Steve\",\n      //     last_name: \"McDonald\",\n      //     phone: \"01913478555\",\n      //     email: \"steve.mcdonald@corrie.co.uk\",\n      //   },\n      // ],\n      contactIndex: null\n    };\n  },\n  getters: {\n    contacts(state) {\n      return state.users;\n    },\n    loadContact(state) {\n      return state.users[state.contactIndex];\n    }\n  },\n  mutations: {\n    addContact(state, contact) {\n      state.users.push(contact);\n    },\n    saveIndex(state, idx) {\n      state.contactIndex = idx;\n    },\n    saveContact(state, contact) {\n      const index = state.contactIndex;\n      if (index !== -1) {\n        state.users[index] = contact;\n      }\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","contactIndex","getters","contacts","users","loadContact","mutations","addContact","contact","push","saveIndex","idx","saveContact","index"],"sources":["C:/Users/George/Desktop/Test2/FrontEnd/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\r\nconst store = createStore({\r\n  state() {\r\n    return {\r\n      // users: [\r\n      //   {\r\n      //     first_name: \"David\",\r\n      //     last_name: \"Platt\",\r\n      //     phone: \"01913478234\",\r\n      //     email: \"david.platt@corrie.co.uk\",\r\n      //   },\r\n      //   {\r\n      //     first_name: \"Jason\",\r\n      //     last_name: \"Grimshaw\",\r\n      //     phone: \"01913478123\",\r\n      //     email: \"jason.grimshaw@corrie.co.uk\",\r\n      //   },\r\n      //   {\r\n      //     first_name: \"Ken\",\r\n      //     last_name: \"Barlow\",\r\n      //     phone: \"019134784929\",\r\n      //     email: \"ken.barlow@corrie.co.uk\",\r\n      //   },\r\n      //   {\r\n      //     first_name: \"Rita\",\r\n      //     last_name: \"Sullivan\",\r\n      //     phone: \"01913478555\",\r\n      //     email: \"rita.sullivan@corrie.co.uk\",\r\n      //   },\r\n      //   {\r\n      //     first_name: \"Steve\",\r\n      //     last_name: \"McDonald\",\r\n      //     phone: \"01913478555\",\r\n      //     email: \"steve.mcdonald@corrie.co.uk\",\r\n      //   },\r\n      // ],\r\n      contactIndex: null,\r\n    };\r\n  },\r\n  getters: {\r\n    contacts(state) {\r\n      return state.users;\r\n    },\r\n    loadContact(state) {\r\n      return state.users[state.contactIndex];\r\n    },\r\n  },\r\n  mutations: {\r\n    addContact(state, contact) {\r\n      state.users.push(contact);\r\n    },\r\n    saveIndex(state, idx) {\r\n      state.contactIndex = idx;\r\n    },\r\n    saveContact(state, contact) {\r\n      const index = state.contactIndex;\r\n      if (index !== -1) {\r\n        state.users[index] = contact;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,KAAK,GAAG;IACN,OAAO;MACL;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,CAACH,KAAK,EAAE;MACd,OAAOA,KAAK,CAACI,KAAK;IACpB,CAAC;IACDC,WAAW,CAACL,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACI,KAAK,CAACJ,KAAK,CAACC,YAAY,CAAC;IACxC;EACF,CAAC;EACDK,SAAS,EAAE;IACTC,UAAU,CAACP,KAAK,EAAEQ,OAAO,EAAE;MACzBR,KAAK,CAACI,KAAK,CAACK,IAAI,CAACD,OAAO,CAAC;IAC3B,CAAC;IACDE,SAAS,CAACV,KAAK,EAAEW,GAAG,EAAE;MACpBX,KAAK,CAACC,YAAY,GAAGU,GAAG;IAC1B,CAAC;IACDC,WAAW,CAACZ,KAAK,EAAEQ,OAAO,EAAE;MAC1B,MAAMK,KAAK,GAAGb,KAAK,CAACC,YAAY;MAChC,IAAIY,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBb,KAAK,CAACI,KAAK,CAACS,KAAK,CAAC,GAAGL,OAAO;MAC9B;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeT,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}