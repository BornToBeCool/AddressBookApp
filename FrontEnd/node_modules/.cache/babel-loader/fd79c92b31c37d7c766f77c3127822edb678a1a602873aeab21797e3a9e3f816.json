{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3a7d6195\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"bg-light p-5\"\n};\nconst _hoisted_2 = {\n  class: \"table-responsive\",\n  id: \"no-more-tables\"\n};\nconst _hoisted_3 = {\n  class: \"table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"bg-primary text-light\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"First Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Last Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Phone No\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\")])], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  \"data-title\": \"First Name\"\n};\nconst _hoisted_6 = {\n  \"data-title\": \"Last Name\"\n};\nconst _hoisted_7 = {\n  \"data-title\": \"Phone No\"\n};\nconst _hoisted_8 = {\n  \"data-title\": \"Email\"\n};\nconst _hoisted_9 = {\n  \"data-title\": \"\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.loadContacts, (user, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", _hoisted_5, _toDisplayString(user.first_name), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_6, _toDisplayString(user.last_name), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_7, _toDisplayString(user.phone), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_8, _toDisplayString(user.email), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editContact(index),\n      type: \"button\",\n      class: \"btn btn-primary\"\n    }, \" Edit Contact \", 8 /* PROPS */, _hoisted_10), _createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger\",\n      onClick: $event => $options.deleteContact(index)\n    }, \" Delete Contact \", 8 /* PROPS */, _hoisted_11)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"mappings":";;;EACWA,KAAK,EAAC;AAAc;;EACtBA,KAAK,EAAC,kBAAkB;EAACC,EAAE,EAAC;;;EACxBD,KAAK,EAAC;AAAO;gEAClBE,oBAOQ;EAPDF,KAAK,EAAC;AAAuB,iBAClCE,oBAKK,0BAJHA,oBAAmB,YAAf,YAAU,gBACdA,oBAAkB,YAAd,WAAS,gBACbA,oBAAiB,YAAb,UAAQ,gBACZA,oBAAc,YAAV,OAAK;;EAKL,YAAU,EAAC;AAAY;;EACvB,YAAU,EAAC;AAAW;;EACtB,YAAU,EAAC;AAAU;;EACrB,YAAU,EAAC;AAAO;;EAClB,YAAU,EAAC;AAAE;;;;uBAjB3BC,oBAkCU,WAlCVC,UAkCU,GAjCRF,oBAgCM,OAhCNG,UAgCM,GA/BJH,oBA8BQ,SA9BRI,UA8BQ,GA7BNC,UAOQ,EACRL,oBAoBQ,mCAnBNC,oBAkBKK,6BAlBuBC,qBAAY,GAA5BC,IAAI,EAAEC,KAAK;yBAAvBR,oBAkBK;MAlBsCS,GAAG,EAAED;IAAK,IACnDT,oBAAsD,MAAtDW,UAAsD,mBAAvBH,IAAI,CAACI,UAAU,kBAC9CZ,oBAAoD,MAApDa,UAAoD,mBAAtBL,IAAI,CAACM,SAAS,kBAC5Cd,oBAA+C,MAA/Ce,UAA+C,mBAAlBP,IAAI,CAACQ,KAAK,kBACvChB,oBAA4C,MAA5CiB,UAA4C,mBAAlBT,IAAI,CAACU,KAAK,kBACpClB,oBAYK,MAZLmB,UAYK,GAXHnB,oBAMS;MALNoB,OAAK,YAAEb,oBAAW,CAACE,KAAK;MACzBY,IAAI,EAAC,QAAQ;MACbvB,KAAK,EAAC;OACP,gBAED,+BACAE,oBAGS;MAHDqB,IAAI,EAAC,QAAQ;MAACvB,KAAK,EAAC,gBAAgB;MAAEsB,OAAK,YAAEb,sBAAa,CAACE,KAAK;OAAG,kBAG3E","names":["class","id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","$options","user","index","key","_hoisted_5","first_name","_hoisted_6","last_name","_hoisted_7","phone","_hoisted_8","email","_hoisted_9","onClick","type"],"sourceRoot":"","sources":["C:\\Users\\George\\Desktop\\addressbookapp\\FrontEnd\\src\\pages\\contactsList.vue"],"sourcesContent":["<template>\n  <section class=\"bg-light p-5\">\n    <div class=\"table-responsive\" id=\"no-more-tables\">\n      <table class=\"table\">\n        <thead class=\"bg-primary text-light\">\n          <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Phone No</th>\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(user, index) in loadContacts\" :key=\"index\">\n            <td data-title=\"First Name\">{{ user.first_name }}</td>\n            <td data-title=\"Last Name\">{{ user.last_name }}</td>\n            <td data-title=\"Phone No\">{{ user.phone }}</td>\n            <td data-title=\"Email\">{{ user.email }}</td>\n            <td data-title=\"\">\n              <button\n                @click=\"editContact(index)\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n              >\n                Edit Contact\n              </button>\n              <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteContact(index)\">\n                \n                Delete Contact\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      user: {},\n    };\n  },\n  methods: {\n    // delete contact from the backend by finding the index of the contact and get the id of it.\n    deleteContact(idx) {\n      const contactId = this.$store.getters.contacts[idx].id\n      fetch('http://localhost:3000/' + String(contactId),{\n        method: 'DELETE'\n      })\n      this.$store.commit('deleteContact', contactId) \n      location.reload()\n    },\n    // finding the index of the contact that should be updated and save it to the vue store\n    editContact(idx) {\n      this.$store.commit(\"savedIndex\", idx);\n      this.$router.push({ path: \"/edit/contact\" });\n    },\n    // loads all contacts from the backend and store them to the vue store\n    loadAllContacts(){\n      fetch(\"http://localhost:3000/\")\n      .then((res) => res.json())\n      .then((data) => this.$store.commit(\"loadContacts\", data))\n    }\n  },\n  computed: {\n    // set the array of contact\n     loadContacts() {\n      this.$store.commit('updateContacts', ) \n      const contactsArray = this.$store.getters.contacts;\n      return contactsArray;\n    },\n  },\n  mounted() {\n    this.loadAllContacts()\n  },\n  \n};\n</script>\n\n<style scoped>\n@media only screen and (max-width: 910px) {\n  #no-more-tables tbody,\n  #no-more-tables tr,\n  #no-more-tables td {\n    display: block;\n  }\n  #no-more-tables thead tr {\n    position: absolute;\n    top: -9999px;\n    left: -9999px;\n  }\n  #no-more-tables td {\n    position: relative;\n    padding-left: 50%;\n  }\n  #no-more-tables td:before {\n    content: attr(data-title);\n    position: absolute;\n    left: 6px;\n    font-weight: bold;\n  }\n  button {\n    margin-top: 0.5rem;\n    width: 10rem;\n  }\n}\nbutton {\n  margin-left: 0.5rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}